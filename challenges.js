/*
GAME RULES:

- The game has 2 players, playing in rounds
- In each turn, a player rolls a dice as many times as he whishes. Each result get added to his ROUND score
- BUT, if the player rolls a 1, all his ROUND score gets lost. After that, it's the next player's turn
- The player can choose to 'Hold', which means that his ROUND score gets added to his GLOBAL score. After that, it's the next player's turn
- The first player to reach 100 points on GLOBAL score wins the game

=====================================================================================================================================

3 ADDITIONAL CHALLENGES
Change the game to follow these rules:

1. A player loses his ENTIRE score when he rolls two 6 in a row. After that, it's the next player's turn.
 (Hint: Always save the previous dice roll in a separate variable).

2. Add an input field to the HTML where players can set the winning score, so that they can change the predefined
   score of 100. (Hint: you can read that value with the .value property in JavaScript. This is a good oportunity 
   to use google to figure this out).

3. Add another dice to the game, so that there are two dices now. The player looses his current score when one of
   them is a 1. (Hint: you will need CSS to position the second dice, so take a look at the CSS code for the first one.)


======================================================================================================================================== */

var scores, roundScore, activePlayer, gamePlaying, lastDice;
var diceOne = document.getElementById("dice-1");
var diceTwo = document.getElementById("dice-2");

// Call the init function to start the game
init();

// This is what we want to happen every time we roll the dice
document.querySelector(".btn-roll").addEventListener("click", function(){
    if(gamePlaying){
        // 1) Random number
        var dice1 = Math.floor(Math.random() * 6) + 1;       // A random number from 1 to 6.
        var dice2 = Math.floor(Math.random() * 6) + 1;       // A random number from 1 to 6.

        // 2) Display the result
        document.getElementById("dice-1").style.display = "block";
        document.getElementById("dice-2").style.display = "block";
        document.getElementById("dice-1").src = "dice-" + dice1 + ".png";  // Make a random image appear for the dice 1
        document.getElementById("dice-2").src = "dice-" + dice2 + ".png";  // Make a random image appear for the dice 2

        // 3) Update the round score if the rolled number wasn't a 1
        if(dice1 !== 1 && dice2 !== 1){
            roundScore += dice1 + dice2; // Add the random number generated by the dice to the roundScore variable
            document.querySelector("#current-" + activePlayer).textContent = roundScore; // Display the roundScore in the current-score div.
        } 
        else if (dice1 === 1){
            diceOne.classList.add("shake");
            setTimeout(nextPlayer, 2000);
        } else if (dice2 === 1){
            diceTwo.classList.add("shake");
            setTimeout(nextPlayer, 2000);
        }

        // 3.1) [CHALLENGE] If the current dice and the last dice are both 6, make the player score 0
        // if(dice === 6 && lastDice === 6){
        //     scores[activePlayer] = 0;
        //     document.querySelector("#score-" + activePlayer).textContent = "0";
        //     nextPlayer();
        // }
        // else if(dice !== 1){
        //     roundScore += dice; // Add the random number generated by the dice to the roundScore variable
        //     document.querySelector("#current-" + activePlayer).textContent = roundScore; // Display the roundScore in the current-score div.
        // } else {
        //     nextPlayer();
        // }
        // lastDice = dice; // Add our last dice value to the lastDice variable
    } 
});

// This is what we want to happen every time we hold

document.querySelector(".btn-hold").addEventListener("click", function(){
    if(gamePlaying){
        // 1) Add CURRENT score to GLOBAL score
        scores[activePlayer] += roundScore;   // The [activePlayer] works as a way to select the player 0 or 1, remember that scores is an arrray.

        // 2) Update the UI to reflect the changes in the global score
        document.querySelector("#score-" + activePlayer).textContent = scores[activePlayer];

        // 2.5) Add the value of the input ".final-score" to the playingTo variable
        var playingTo = document.querySelector(".final-score").value;
        var winningScore;

        // 2.9) Undefined, 0, null and "" are COERCED to false. Anything else will be COERCED to true
        if(playingTo){
            winningScore = playingTo;
        } else {
            winningScore = 100;
        }

        // 3) Check if player won the game
        if(scores[activePlayer] >= winningScore){
            document.querySelector("#name-" + activePlayer).textContent = "Winner!"; // Display "Winner" instead of "Player 1/2"
            hideDices();
            document.querySelector(".player-" + activePlayer +"-panel").classList.add("winner");  // Add the "winner" class to the winner
            document.querySelector(".player-" + activePlayer +"-panel").classList.remove("active");  // Remove the "active" class
            gamePlaying = false;
        } else {
            // 4) Next player
            nextPlayer();
        }
    }
});

function nextPlayer (){
    // CHANGE THE ACTIVE PLAYER
    activePlayer === 0 ? activePlayer = 1 : activePlayer = 0;  // Is the active player 0? if so, make it 1, otherwise keep it as 0.
    // Reset the roundScore
    roundScore = 0;

    // Remove the current points
    document.getElementById("current-0").textContent = 0;
    document.getElementById("current-1").textContent = 0;

    // Add the gray background and higher font weight to the active player
    document.querySelector(".player-0-panel").classList.toggle("active");
    document.querySelector(".player-1-panel").classList.toggle("active");

    // Hide the dices when a turn ends
    hideDices();

    // Remove the shake class from the dice so it can shake again next time we add it
    diceOne.classList.remove("shake");
    diceTwo.classList.remove("shake");
    
}

// NEW GAME Event Listener
document.querySelector(".btn-new").addEventListener("click", init);

function init(){
    // 1) Reset player scores
    scores = [0, 0];

    // 2) Make 0 the active player (that's the player that starts)
    activePlayer = 0;

    // 3) Reset the roundScore and set the gamePlaying to true
    roundScore = 0;
    gamePlaying = true;

    // 4)  Hide the dices when we enter the game
    hideDices();

    // 5) Make the score points and current points 0
    document.getElementById("score-0").textContent = "0";
    document.getElementById("score-1").textContent = "0";
    document.getElementById("current-0").textContent = "0";
    document.getElementById("current-1").textContent = "0";

    // 6) Change the "winner" text
    document.getElementById("name-0").textContent = "Player 1";
    document.getElementById("name-1").textContent = "Player 2";

    // 7) Remove the winner class
    document.querySelector(".player-0-panel").classList.remove("winner");
    document.querySelector(".player-1-panel").classList.remove("winner");

    // Remove the active player and add it again to player 0
    document.querySelector(".player-0-panel").classList.remove("active");
    document.querySelector(".player-1-panel").classList.remove("active");
    document.querySelector(".player-0-panel").classList.add("active");
}

function hideDices(){
    document.getElementById("dice-1").style.display = "none";  
    document.getElementById("dice-2").style.display = "none";  
}





//document.querySelector("#current-" + activePlayer).textContent = dice;   
// If activePlayer is 0, then current will be #current-0, and if activePlayer is 1, current will be #current-1. 
// That's useful because in our html we have both current-0 and current-1 as IDs;

